#jinja2: lstrip_blocks: True
# {{ ansible_managed }}
version: "3"

services:
# CA
  {% set fq_ca_name = 'ca.' ~ fabric_compose.ca.domain %}
  {{fq_ca_name}}:
    build:
      context: .
      dockerfile: Dockerfile-ca
      args:
        signcert_path: {{certificates_and_keys["ordererOrganizations"][fabric_compose.ca.domain]["ca"]["certificates"][0].path}}
        privatekey_path: {{certificates_and_keys["ordererOrganizations"][fabric_compose.ca.domain]["ca"]["keys"][0].path}}
    environment:
      - FABRIC_CA_SERVER_TLS_ENABLED={{fabric_compose.ca.env.ca_server_tls_enabled}}
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/{{certificates_and_keys["ordererOrganizations"][fabric_compose.ca.domain]["ca"]["keys"][0].filename}}
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/{{certificates_and_keys["ordererOrganizations"][fabric_compose.ca.domain]["ca"]["certificates"][0].filename}}
    ports:
    {% for port in fabric_compose.ca.ports %}
      - {{port}}
    {% endfor %}
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.{{domain}}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/{{certificates_and_keys["ordererOrganizations"][fabric_compose.ca.domain]["ca"]["keys"][0].filename}} -b admin:adminpw -d'
    volumes:
     {% for volume in fabric_compose.ca.volumes %}
      - {{volume}}
    {% endfor %}
    container_name: {{fq_ca_name}}

# Orderer
{# The template only handles one order. DAF #}
  {% set fq_orderer_name = fabric_compose.orderer.name~ '0' ~ '.' ~ fabric_compose.orderer.domain %}
  {{fq_orderer_name}}:
    build:
      context: .
      dockerfile: Dockerfile-orderer
      args:
        block_path: orderer.block
        signcert_path: {{certificates_and_keys["ordererOrganizations"][fabric_compose.orderer.domain]["orderers"][fq_orderer_name]["msp"]["signcerts"]["certificates"][0].path}}
        privatekey_path: {{certificates_and_keys["ordererOrganizations"][fabric_compose.orderer.domain]["orderers"][fq_orderer_name]["msp"]["keystore"]["keys"][0].path}}
        cacert_path: {{certificates_and_keys["ordererOrganizations"][fabric_compose.orderer.domain]["orderers"][fq_orderer_name]["msp"]["cacerts"]["certificates"][0].path}}
        admincert_path: {{certificates_and_keys["ordererOrganizations"][fabric_compose.orderer.domain]["orderers"][fq_orderer_name]["msp"]["admincerts"]["certificates"][0].path}}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/msp/signcerts/{{certificates_and_keys["ordererOrganizations"][fabric_compose.orderer.domain]["orderers"][fq_orderer_name]["msp"]["signcerts"]["certificates"][0].filename}}
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/msp/keystore/{{certificates_and_keys["ordererOrganizations"][fabric_compose.orderer.domain]["orderers"][fq_orderer_name]["msp"]["keystore"]["keys"][0].filename}}
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/msp/cacerts/{{certificates_and_keys["ordererOrganizations"][fabric_compose.orderer.domain]["orderers"][fq_orderer_name]["msp"]["cacerts"]["certificates"][0].filename}}]
    working_dir: {{fabric_compose.orderer.workingdir}}
    ports:
    {% for port in fabric_compose.orderer.ports %}
      - {{port}}
    {% endfor %}
    command: {{fabric_compose.orderer.command}}
    container_name: {{fq_orderer_name}}
    depends_on: 
      - {{fq_ca_name}}

# Peers
{% for org in fabric_compose.peers.organizations %}
 {% for number in range(0, org.numpeers) %}
  {% set fq_peer_name = org.peername ~ number ~ '.' ~ org.domain %}
  
  {{fq_peer_name}}:
    build:
      context: .
      dockerfile: Dockerfile-peer
      args:
        peer_num: {{number}}
        signcert_path: {{certificates_and_keys["peerOrganizations"][org.domain]["peers"][fq_peer_name]["msp"]["signcerts"]["certificates"][0].path}}
        privatekey_path: {{certificates_and_keys["peerOrganizations"][org.domain]["peers"][fq_peer_name]["msp"]["keystore"]["keys"][0].path}}
        cacert_path: {{certificates_and_keys["peerOrganizations"][org.domain]["peers"][fq_peer_name]["msp"]["cacerts"]["certificates"][0].path}}
    environment:
       - CORE_PEER_ID={{fq_peer_name}}
       - CORE_PEER_ADDRESS={{fq_peer_name}}:{{fabric_compose.peers.ports.p1}}
       - CORE_PEER_GOSSIP_EXTERNALENDPOINT={{fq_peer_name}}:{{fabric_compose.peers.ports.p1}}
       {% if number > 0 %}
       - CORE_PEER_GOSSIP_BOOTSTREP={{org.peername}}0.{{org.domain}}:{{fabric_compose.peers.ports.p1}}
       {% endif %}
       - CORE_PEER-LOCALMSPID={{org.env.localmspid}}
       - CORE_VM_ENDPOINT={{org.env.vm_endpoint}}
       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE={{org.env.vm_docker_hostconfig_networkmode}}
       - CORE_LOGGING_LEVEL={{org.env.logging_level}}
       - CORE_PEER_TLS_ENABLED={{org.env.tls_enabled}}
       - CORE_PEER_ENDORSER_ENABLED={{org.env.endorser_enabled}}
       - CORE_PEER_GOSSIP_USELEADERELECTION={{org.env.gossip_useleaderelection}}
       - CORE_PEER_GOSSIP_ORGLEADER={{org.env.gossip_orgleader}}
       - CORE_PEER_GOSSIP_SKIPHANDSHAKE={{org.env.gossip_skiphandshake}}
       - CORE_PEER_PROFILE_ENABLED={{org.env.gossip_profile_enabled}}
       - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/msp/signcerts/{{certificates_and_keys["peerOrganizations"][org.domain]["peers"][fq_peer_name]["msp"]["signcerts"]["certificates"][0].filename}}
       - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/msp/keystore/{{certificates_and_keys["peerOrganizations"][org.domain]["peers"][fq_peer_name]["msp"]["keystore"]["keys"][0].filename}}
       - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/msp/cacerts/{{certificates_and_keys["peerOrganizations"][org.domain]["peers"][fq_peer_name]["msp"]["cacerts"]["certificates"][0].filename}}
    working_dir: {{org.workingdir}}
    ports:
      - {{fabric_compose.peers.ports.hostbase+number}}:{{fabric_compose.peers.ports.p1}}
      - {{fabric_compose.peers.ports.hostbase+number+2}}:{{fabric_compose.peers.ports.p2}}
    command: {{fabric_compose.peers.command}}
    volumes:
       - /var/run/:/host/var/run/
    container_name: {{fq_peer_name}}
    depends_on:
       - {{fq_ca_name}}
       - {{fq_orderer_name}}
       {% if number > 0 %}
       {% for i in range(0, number) %}
       - {{org.peername}}{{i}}.{{org.domain}}
       {% endfor %}
       {% endif %}
       
    #----------------------------------------------------------------------------
    
  {% endfor %}
{% endfor %}

networks:
     {{fabriclauncher_swarm_overlay_network_name}}:
        driver: overlay   