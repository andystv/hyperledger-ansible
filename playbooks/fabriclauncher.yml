---
# file: fabriclaunchers.yml
# These definitions are for hosts that launch instances of the Hyperledger 
# Fabric Network using Docker and Docker Compose.
# https://www.docker.io/
# For this playbook, also see: http://docs.docker.io/en/latest/installation/ubuntulinux/

- hosts: fabriclauncher
  become: true
  vars:
  
    - consortiumname: "KeojaConsortium"
    - ordererorgname: "keoja"
    - peerorgname: "{{ordererorgname}}"
    - domain:  "keoja.com"
    - dockertag: "x86_64-1.0.0-beta"
    # Variables for crypto-config.yaml.j2
    - fabric_crypto_config: {ordererorgs: [ 
                                { name: "{{ordererorgname}}", domain: "{{domain}}", 
                                  #specs: [ { hostname: "zip", commonname: "zap"} ],
                                  template: { count: 1}
                                }
                               ],
                             peerorgs: [ 
                                { name: "{{peerorgname}}", domain: "{{domain}}",
                                  #specs: [ { hostname: "zip", commonname: "zap"} ],
                                  template: { count: 1 }
                                }
                               ]
                            }
    
    # Variables for configtx.yaml.j2
    - fabric_profiles: [ {
                      name: "OneOrgGenesis",
                      orderer: { defaultstag: "OrdererDefaults", organizations: ["{{ordererorgname}}"]},
                      ordererorg: "{{ordererorgname}}",
                      consortiums: [{name: "{{consortiumname}}", organizations : ["{{ordererorgname}}"] }],
                  },
                  {
                     name: "OneOrgChannel",
                     consortium: "{{consortiumname}}",
                     application: { tag: "ApplicationDefaults", organizations: ["{{ordererorgname}}"]},
                  }
                ]
                
    - fabric_organizations: [
                     {
                       tag : "OrderOrg",
                       name : "OrderOrg",
                       id : "OrdererMSP",
                       mspdir : "crypto-config/ordererOrganizations/{{domain}}/msp",
                     },
                     {
                       tag: "{{ordererorgname}}",
                       name: "{{ordererorgname}}MSP",
                       id: "{{ordererorgname}}MSP",
                       mspdir: "crypto-config/peerOrganizations/{{domain}}/msp",
                       anchorpeers : [{ "host" : "peer0.{{domain}}", "port" : "7051"}]
                     }
                ]
    - fabric_ordererdefaults: {
                     tag: "OrdererDefaults",
                     type: "solo",
                     addresses: ["orderer.{{domain}}:7050"],
                     batch: { timeout: "2s", maxmsgcount: "10", maxbytes: "99 MB", preferredmaxbytes: "512 KB"},
                     maxchannels: 0,
                     kafka: {"brokers" : [ "127.0.0.1:9092"]},
                     organizations: []
               }
    - fabric_applicationdefaults: {
                     tag: "ApplicationDefaults"
      }
    # Variables for fabric-docker-compose.yml.j2
    - fabric_compose: {
                     ca: {
                       name: "ca",
                       domain: "{{domain}}",
                       image: "hyperledger/fabric-ca:{{dockertag}}",
                       env: {
                         ca_home: "/etc/hyperledger/fabric-ca-server",
                         ca_server_tls_enabled: "true",
                         ca_server_tls_certfile: "/etc/hyperledger/fabric-ca-server-config/ca.{{domain}}-cert.pem",
                         ca_server_tls_keyfile: "/etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY"
                       },
                       ports: ["7054:7054"],
                       command: "sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.{{domain}}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY -b admin:adminpw -d'",
                       volumes: ["./crypto-config/peerOrganizations/org1.blocledger.com/ca/:/etc/hyperledger/fabric-ca-server-config",
                                 "./fabricca/tlsOrg1:/etc/hyperledger/fabric-ca-server"]
                     },
                     orderer: {
                       name: "orderer",
                       domain: "{{domain}}",
                       image: "hyperledger/fabric-orderer:{{dockertag}}",
                       ports: ["7050:7050"],
                       workingdir: "/opt/gopath/src/github.com/hyperledger/fabric",
                       command: "orderer",
                       volumes: ["./orderer.block:/var/hyperledger/orderer/orderer.block",
                                 "./crypto-config/ordererOrganizations/blocledger.com/orderers/orderer.blocledger.com:/var/hyperledger/orderer"
                       ]
                     },
                     peers: { 
                       image: "hyperledger/fabric-peer:{{dockertag}}",
                       command: "peer node start --peer-defaultchain=false",
                       organizations: [
                        {
                          numpeers: 2,
                          peername: "peer",
                          domain: "{{domain}}",
                          env: {
                            localmspid: "Org1MSP",
                            vm_endpoint: "unix:///host/var/run/docker.sock",
                            vm_docker_hostconfig_networkmode: "fixturesv1_default",
                            logging_level: "DEBUG",
                            tls_enabled: "true",
                            endorser_enabled: "true",
                            gossip_useleaderelection: "true",
                            gossip_orgleader: "false",
                            gossip_skiphandshake: "true",
                            gossip_profile_enabled: "true",
                            tls_cert_file: "/etc/hyperledger/fabric/msp/signcerts/peer0.org1.blocledger.com-cert.pem",
                            tls_key_file: "/etc/hyperledger/fabric/msp/keystore/PEER0_ORG1_PRIVATE_KEY",
                            tls_rootcert_file: "/etc/hyperledger/fabric/msp/cacerts/ca.org1.blocledger.com-cert.pem"
                          },
                          workingdir: "/opt/gopath/src/github.com/hyperledger/fabric",
                          
                        }
                       ]
                     }
       }
    
  pre_tasks:
      - assert:
         that: "ansible_version.major >= {{hl_minimum_ansible_version_major}} and ansible_version.minor >= {{hl_minimum_ansible_version_minor}}"
  roles:
    - { role: fabriclauncher,
          user: "{{ansible_user}}",
          group: "{{'staff' if is_macosx else ansible_user}}",
          cryptoconfig: "{{fabric_crypto_config}}",
          profiles: "{{fabric_profiles}}",
          organizations: "{{fabric_organizations}}",
          ordererdefaults: "{{fabric_ordererdefaults}}",
          applicationdefaults: "{{fabric_applicationdefaults}}"
      }
